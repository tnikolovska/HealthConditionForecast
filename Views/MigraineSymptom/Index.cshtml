@model IEnumerable<HealthConditionForecast.Models.MigraineSympton>

@{
    ViewData["Title"] = "Migraine Symptoms";
}

@functions {
    public string GetEnumDisplayName(Enum value)
    {
        var member = value.GetType().GetMember(value.ToString()).FirstOrDefault();
        if (member != null)
        {
            var displayAttr = member.GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.DisplayAttribute), false)
                                    .FirstOrDefault() as System.ComponentModel.DataAnnotations.DisplayAttribute;
            if (displayAttr != null)
                return displayAttr.Name;
        }
        return value.ToString();
    }
}

<h1>Migraine Symptoms</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Migraine Symptom</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Type</th>
            <th>Health Condition</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Description</td>
                <td>@GetEnumDisplayName(item.Type)</td>
                <td>@ViewBag.HealthCondition</td>
                <td>
    @if (User.IsInRole("Admin"))
    {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
    @if (User.IsInRole("Admin"))
    {
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    }
                </td>
            </tr>
        }
    </tbody>
</table>
